
# Used if Object/Interface type name is different then the actual table name
directive @tableName(name: String!) on OBJECT | INTERFACE

# Generate filter input on an object
directive @generateFilterInput(name: String!, description: String) on OBJECT | INTERFACE

# Generate arguments for a given field or all object fields
directive @generateArguments(filter: Boolean = True, pagination: Boolean = True, ordering: Boolean = True) on OBJECT


enum _relationType {
    ONE_TO_ONE
    ONE_TO_MANY
    MANY_TO_MANY
}

directive @sqlRelation(relationType: _relationType!, baseTable: String!, refTable: String!, fields: [String!]!,
    references: [String!]!, manyToManyTable: String = "", manyToManyFields: [String] = [], manyToManyReferences: [String] = []) on FIELD_DEFINITION

enum _OrderingTypes {
    ASC
    DESC
    ASC_NULL_FIRST
    DESC_NULL_FIRST
}